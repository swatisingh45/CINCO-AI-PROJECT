/*
 * generated by Xtext 2.14.0
 */
package info.scce.cinco.product.aiProject.gratext.services;

import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.List;
import org.eclipse.xtext.Action;
import org.eclipse.xtext.Alternatives;
import org.eclipse.xtext.Assignment;
import org.eclipse.xtext.Grammar;
import org.eclipse.xtext.GrammarUtil;
import org.eclipse.xtext.Group;
import org.eclipse.xtext.Keyword;
import org.eclipse.xtext.ParserRule;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.TerminalRule;
import org.eclipse.xtext.service.AbstractElementFinder.AbstractGrammarElementFinder;
import org.eclipse.xtext.service.GrammarProvider;

@Singleton
public class AIProjectGratextGrammarAccess extends AbstractGrammarElementFinder {
	
	public class AIProjectElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "info.scce.cinco.product.aiProject.gratext.AIProjectGratext.AIProject");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cAIProjectAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cAIProjectKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cIdAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cId_IDTerminalRuleCall_2_0 = (RuleCall)cIdAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cLeftCurlyBracketKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_3_1 = (Keyword)cGroup_3.eContents().get(1);
		
		//AIProject:
		//	{AIProject}
		//	'AIProject' id=_ID? ('{'
		//	'}')?;
		@Override public ParserRule getRule() { return rule; }
		
		//{AIProject} 'AIProject' id=_ID? ('{' '}')?
		public Group getGroup() { return cGroup; }
		
		//{AIProject}
		public Action getAIProjectAction_0() { return cAIProjectAction_0; }
		
		//'AIProject'
		public Keyword getAIProjectKeyword_1() { return cAIProjectKeyword_1; }
		
		//id=_ID?
		public Assignment getIdAssignment_2() { return cIdAssignment_2; }
		
		//_ID
		public RuleCall getId_IDTerminalRuleCall_2_0() { return cId_IDTerminalRuleCall_2_0; }
		
		//('{' '}')?
		public Group getGroup_3() { return cGroup_3; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_3_0() { return cLeftCurlyBracketKeyword_3_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_3_1() { return cRightCurlyBracketKeyword_3_1; }
	}
	public class _DecorationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "info.scce.cinco.product.aiProject.gratext.AIProjectGratext._Decoration");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action c_DecorationAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cDecorateKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameHintAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameHint_EStringParserRuleCall_2_0 = (RuleCall)cNameHintAssignment_2.eContents().get(0);
		private final Keyword cAtKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cLocationShiftAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cLocationShift_PointParserRuleCall_4_0 = (RuleCall)cLocationShiftAssignment_4.eContents().get(0);
		
		//_Decoration _graphmodel::_Decoration:
		//	{_graphmodel::_Decoration}
		//	'decorate' nameHint=_EString? 'at' locationShift=_Point;
		@Override public ParserRule getRule() { return rule; }
		
		//{_graphmodel::_Decoration} 'decorate' nameHint=_EString? 'at' locationShift=_Point
		public Group getGroup() { return cGroup; }
		
		//{_graphmodel::_Decoration}
		public Action get_DecorationAction_0() { return c_DecorationAction_0; }
		
		//'decorate'
		public Keyword getDecorateKeyword_1() { return cDecorateKeyword_1; }
		
		//nameHint=_EString?
		public Assignment getNameHintAssignment_2() { return cNameHintAssignment_2; }
		
		//_EString
		public RuleCall getNameHint_EStringParserRuleCall_2_0() { return cNameHint_EStringParserRuleCall_2_0; }
		
		//'at'
		public Keyword getAtKeyword_3() { return cAtKeyword_3; }
		
		//locationShift=_Point
		public Assignment getLocationShiftAssignment_4() { return cLocationShiftAssignment_4; }
		
		//_Point
		public RuleCall getLocationShift_PointParserRuleCall_4_0() { return cLocationShift_PointParserRuleCall_4_0; }
	}
	public class _PointElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "info.scce.cinco.product.aiProject.gratext.AIProjectGratext._Point");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action c_PointAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cXAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cX_EIntParserRuleCall_2_0 = (RuleCall)cXAssignment_2.eContents().get(0);
		private final Keyword cCommaKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cYAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cY_EIntParserRuleCall_4_0 = (RuleCall)cYAssignment_4.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//_Point _graphmodel::_Point:
		//	{_graphmodel::_Point}
		//	'(' x=_EInt ',' y=_EInt ')';
		@Override public ParserRule getRule() { return rule; }
		
		//{_graphmodel::_Point} '(' x=_EInt ',' y=_EInt ')'
		public Group getGroup() { return cGroup; }
		
		//{_graphmodel::_Point}
		public Action get_PointAction_0() { return c_PointAction_0; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_1() { return cLeftParenthesisKeyword_1; }
		
		//x=_EInt
		public Assignment getXAssignment_2() { return cXAssignment_2; }
		
		//_EInt
		public RuleCall getX_EIntParserRuleCall_2_0() { return cX_EIntParserRuleCall_2_0; }
		
		//','
		public Keyword getCommaKeyword_3() { return cCommaKeyword_3; }
		
		//y=_EInt
		public Assignment getYAssignment_4() { return cYAssignment_4; }
		
		//_EInt
		public RuleCall getY_EIntParserRuleCall_4_0() { return cY_EIntParserRuleCall_4_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_5() { return cRightParenthesisKeyword_5; }
	}
	public class _EStringElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "info.scce.cinco.product.aiProject.gratext.AIProjectGratext._EString");
		private final RuleCall c_STRINGTerminalRuleCall = (RuleCall)rule.eContents().get(1);
		
		//_EString:
		//	_STRING;
		@Override public ParserRule getRule() { return rule; }
		
		//_STRING
		public RuleCall get_STRINGTerminalRuleCall() { return c_STRINGTerminalRuleCall; }
	}
	public class _EIntElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "info.scce.cinco.product.aiProject.gratext.AIProjectGratext._EInt");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall c_SIGNTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall c_INTTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		
		//_EInt _ecore::EInt:
		//	_SIGN? _INT;
		@Override public ParserRule getRule() { return rule; }
		
		//_SIGN? _INT
		public Group getGroup() { return cGroup; }
		
		//_SIGN?
		public RuleCall get_SIGNTerminalRuleCall_0() { return c_SIGNTerminalRuleCall_0; }
		
		//_INT
		public RuleCall get_INTTerminalRuleCall_1() { return c_INTTerminalRuleCall_1; }
	}
	public class _ELongElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "info.scce.cinco.product.aiProject.gratext.AIProjectGratext._ELong");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall c_SIGNTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall c_INTTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		
		//_ELong _ecore::ELong:
		//	_SIGN? _INT;
		@Override public ParserRule getRule() { return rule; }
		
		//_SIGN? _INT
		public Group getGroup() { return cGroup; }
		
		//_SIGN?
		public RuleCall get_SIGNTerminalRuleCall_0() { return c_SIGNTerminalRuleCall_0; }
		
		//_INT
		public RuleCall get_INTTerminalRuleCall_1() { return c_INTTerminalRuleCall_1; }
	}
	public class _EDoubleElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "info.scce.cinco.product.aiProject.gratext.AIProjectGratext._EDouble");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall c_SIGNTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall c_INTTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Keyword cFullStopKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final RuleCall c_INTTerminalRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		
		//_EDouble _ecore::EDouble:
		//	_SIGN? _INT? '.' _INT;
		@Override public ParserRule getRule() { return rule; }
		
		//_SIGN? _INT? '.' _INT
		public Group getGroup() { return cGroup; }
		
		//_SIGN?
		public RuleCall get_SIGNTerminalRuleCall_0() { return c_SIGNTerminalRuleCall_0; }
		
		//_INT?
		public RuleCall get_INTTerminalRuleCall_1() { return c_INTTerminalRuleCall_1; }
		
		//'.'
		public Keyword getFullStopKeyword_2() { return cFullStopKeyword_2; }
		
		//_INT
		public RuleCall get_INTTerminalRuleCall_3() { return c_INTTerminalRuleCall_3; }
	}
	public class _EFloatElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "info.scce.cinco.product.aiProject.gratext.AIProjectGratext._EFloat");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall c_SIGNTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final RuleCall c_INTTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Keyword cFullStopKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final RuleCall c_INTTerminalRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		
		//_EFloat _ecore::EFloat:
		//	_SIGN? _INT? '.' _INT;
		@Override public ParserRule getRule() { return rule; }
		
		//_SIGN? _INT? '.' _INT
		public Group getGroup() { return cGroup; }
		
		//_SIGN?
		public RuleCall get_SIGNTerminalRuleCall_0() { return c_SIGNTerminalRuleCall_0; }
		
		//_INT?
		public RuleCall get_INTTerminalRuleCall_1() { return c_INTTerminalRuleCall_1; }
		
		//'.'
		public Keyword getFullStopKeyword_2() { return cFullStopKeyword_2; }
		
		//_INT
		public RuleCall get_INTTerminalRuleCall_3() { return c_INTTerminalRuleCall_3; }
	}
	public class _EBooleanElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "info.scce.cinco.product.aiProject.gratext.AIProjectGratext._EBoolean");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Keyword cTrueKeyword_0 = (Keyword)cAlternatives.eContents().get(0);
		private final Keyword cFalseKeyword_1 = (Keyword)cAlternatives.eContents().get(1);
		
		//_EBoolean _ecore::EBoolean:
		//	'true' | 'false';
		@Override public ParserRule getRule() { return rule; }
		
		//'true' | 'false'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//'true'
		public Keyword getTrueKeyword_0() { return cTrueKeyword_0; }
		
		//'false'
		public Keyword getFalseKeyword_1() { return cFalseKeyword_1; }
	}
	
	
	private final AIProjectElements pAIProject;
	private final _DecorationElements p_Decoration;
	private final _PointElements p_Point;
	private final _EStringElements p_EString;
	private final _EIntElements p_EInt;
	private final _ELongElements p_ELong;
	private final _EDoubleElements p_EDouble;
	private final _EFloatElements p_EFloat;
	private final _EBooleanElements p_EBoolean;
	private final TerminalRule t_ID;
	private final TerminalRule t_SIGN;
	private final TerminalRule t_INT;
	private final TerminalRule t_STRING;
	private final TerminalRule t_ML_COMMENT;
	private final TerminalRule t_SL_COMMENT;
	private final TerminalRule t_WS;
	private final TerminalRule t_ANY_OTHER;
	
	private final Grammar grammar;

	@Inject
	public AIProjectGratextGrammarAccess(GrammarProvider grammarProvider) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.pAIProject = new AIProjectElements();
		this.p_Decoration = new _DecorationElements();
		this.p_Point = new _PointElements();
		this.p_EString = new _EStringElements();
		this.p_EInt = new _EIntElements();
		this.p_ELong = new _ELongElements();
		this.p_EDouble = new _EDoubleElements();
		this.p_EFloat = new _EFloatElements();
		this.p_EBoolean = new _EBooleanElements();
		this.t_ID = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "info.scce.cinco.product.aiProject.gratext.AIProjectGratext._ID");
		this.t_SIGN = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "info.scce.cinco.product.aiProject.gratext.AIProjectGratext._SIGN");
		this.t_INT = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "info.scce.cinco.product.aiProject.gratext.AIProjectGratext._INT");
		this.t_STRING = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "info.scce.cinco.product.aiProject.gratext.AIProjectGratext._STRING");
		this.t_ML_COMMENT = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "info.scce.cinco.product.aiProject.gratext.AIProjectGratext._ML_COMMENT");
		this.t_SL_COMMENT = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "info.scce.cinco.product.aiProject.gratext.AIProjectGratext._SL_COMMENT");
		this.t_WS = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "info.scce.cinco.product.aiProject.gratext.AIProjectGratext._WS");
		this.t_ANY_OTHER = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "info.scce.cinco.product.aiProject.gratext.AIProjectGratext._ANY_OTHER");
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("info.scce.cinco.product.aiProject.gratext.AIProjectGratext".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	@Override
	public Grammar getGrammar() {
		return grammar;
	}
	

	
	//AIProject:
	//	{AIProject}
	//	'AIProject' id=_ID? ('{'
	//	'}')?;
	public AIProjectElements getAIProjectAccess() {
		return pAIProject;
	}
	
	public ParserRule getAIProjectRule() {
		return getAIProjectAccess().getRule();
	}
	
	//_Decoration _graphmodel::_Decoration:
	//	{_graphmodel::_Decoration}
	//	'decorate' nameHint=_EString? 'at' locationShift=_Point;
	public _DecorationElements get_DecorationAccess() {
		return p_Decoration;
	}
	
	public ParserRule get_DecorationRule() {
		return get_DecorationAccess().getRule();
	}
	
	//_Point _graphmodel::_Point:
	//	{_graphmodel::_Point}
	//	'(' x=_EInt ',' y=_EInt ')';
	public _PointElements get_PointAccess() {
		return p_Point;
	}
	
	public ParserRule get_PointRule() {
		return get_PointAccess().getRule();
	}
	
	//_EString:
	//	_STRING;
	public _EStringElements get_EStringAccess() {
		return p_EString;
	}
	
	public ParserRule get_EStringRule() {
		return get_EStringAccess().getRule();
	}
	
	//_EInt _ecore::EInt:
	//	_SIGN? _INT;
	public _EIntElements get_EIntAccess() {
		return p_EInt;
	}
	
	public ParserRule get_EIntRule() {
		return get_EIntAccess().getRule();
	}
	
	//_ELong _ecore::ELong:
	//	_SIGN? _INT;
	public _ELongElements get_ELongAccess() {
		return p_ELong;
	}
	
	public ParserRule get_ELongRule() {
		return get_ELongAccess().getRule();
	}
	
	//_EDouble _ecore::EDouble:
	//	_SIGN? _INT? '.' _INT;
	public _EDoubleElements get_EDoubleAccess() {
		return p_EDouble;
	}
	
	public ParserRule get_EDoubleRule() {
		return get_EDoubleAccess().getRule();
	}
	
	//_EFloat _ecore::EFloat:
	//	_SIGN? _INT? '.' _INT;
	public _EFloatElements get_EFloatAccess() {
		return p_EFloat;
	}
	
	public ParserRule get_EFloatRule() {
		return get_EFloatAccess().getRule();
	}
	
	//_EBoolean _ecore::EBoolean:
	//	'true' | 'false';
	public _EBooleanElements get_EBooleanAccess() {
		return p_EBoolean;
	}
	
	public ParserRule get_EBooleanRule() {
		return get_EBooleanAccess().getRule();
	}
	
	//terminal _ID:
	//	'^'? ('a'..'z' | 'A'..'Z' | '_') ('a'..'z' | 'A'..'Z' | '_' | '-' | '0'..'9')*;
	public TerminalRule get_IDRule() {
		return t_ID;
	}
	
	//terminal _SIGN:
	//	'+' | '-';
	public TerminalRule get_SIGNRule() {
		return t_SIGN;
	}
	
	//terminal _INT returns _ecore::EInt:
	//	'0'..'9'+;
	public TerminalRule get_INTRule() {
		return t_INT;
	}
	
	//terminal _STRING:
	//	'"' ('\\' . | !('\\' | '"'))* '"' |
	//	"'" ('\\' . | !('\\' | "'"))* "'";
	public TerminalRule get_STRINGRule() {
		return t_STRING;
	}
	
	//terminal _ML_COMMENT:
	//	'/*'->'*/';
	public TerminalRule get_ML_COMMENTRule() {
		return t_ML_COMMENT;
	}
	
	//terminal _SL_COMMENT:
	//	'//' !('\n' | '\r')* ('\r'? '\n')?;
	public TerminalRule get_SL_COMMENTRule() {
		return t_SL_COMMENT;
	}
	
	//terminal _WS:
	//	' ' | '\t' | '\r' | '\n'+;
	public TerminalRule get_WSRule() {
		return t_WS;
	}
	
	//terminal _ANY_OTHER:
	//	.;
	public TerminalRule get_ANY_OTHERRule() {
		return t_ANY_OTHER;
	}
}
